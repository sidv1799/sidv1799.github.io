{"version":3,"sources":["picture.jpg","Projects.js","Resume.js","Navbar.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","React","Component","Resume","Navbar","Menu","Item","href","name","target","rel","className","Header","as","size","Grid","centered","columns","padded","divided","Row","Column","width","Image","src","pic","circular","Container","Icon","App","exact","path","component","Projects","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fe2834dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picture.d68897fc.jpg\";","import React from 'react';\r\n\r\nexport default class Home extends React.Component {\r\n    render(){\r\n        return (\r\n            <p>Projects</p>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Resume extends React.Component {\r\n    render(){\r\n        return (\r\n            <p>Resume</p>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item href=\"/\"  name='Home'>\r\n          Home\r\n        </Menu.Item>\r\n\r\n        <Menu.Item href=\"https://drive.google.com/open?id=1qxgsbqucXccKLcHIOhPdimjkNTSEUAku\" name='Resume' target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Resume\r\n        </Menu.Item>\r\n\r\n        <Menu.Item href=\"/projects\" name='Projects'>\r\n          Projects\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Image, Header, Grid, Container, Icon} from 'semantic-ui-react';\r\nimport pic from './picture.jpg';\r\nimport './App.css';\r\n\r\nexport default class Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Header as='h1' size=\"huge\">Sidharth Venkatesh</Header>\r\n                <div className=\"padded-grid\">\r\n                    <Grid centered columns={2} padded divided>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={8}>\r\n                                <Image src={pic} size='large' circular />\r\n                            </Grid.Column>\r\n                            <Grid.Column width={8}>\r\n                                <div className=\"item-centered\">\r\n                                    <h3>Purdue University Computer Science</h3>\r\n                                    <h3>Class of 2021</h3>\r\n                                </div>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n\r\n                    </Grid>\r\n                    <Container>\r\n                        <a href=\"https://www.linkedin.com/in/sidharth-venkatesh/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Icon name='linkedin' size=\"huge\"/>\r\n                        </a>\r\n                        <a href=\"https://github.com/Sid-V\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Icon name='github' size=\"huge\"/>\r\n                        </a>\r\n                        <a href=\"https://www.facebook.com/sidharth.venkatesh\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Icon name='facebook' size=\"huge\"/>\r\n                        </a>\r\n                        <a href=\"mailto:sidv@purdue.edu\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Icon name='mail' size=\"huge\"/>\r\n                        </a>\r\n\r\n                    </Container>\r\n                </div>\r\n\r\n                    \r\n                                    \r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Projects from './Projects.js';\r\nimport Resume from './Resume.js';\r\nimport Navbar from './Navbar.js';\r\nimport Home from './Home.js';\r\n\r\nexport default class App extends React.Component {\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Navbar/>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home}/> \r\n            <Route exact path=\"/projects\" component={Projects} />\r\n            <Route exact path=\"/resume\" component={Resume} />\r\n          </Switch>\r\n        </Router>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}